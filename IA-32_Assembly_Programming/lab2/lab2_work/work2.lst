     1                                           ;代码清单8-2
     2                                           ;文件名：c08.asm
     3                                           ;文件说明：用户程序 
     4                                           ;创建日期：2011-5-5 18:17
     5                                           
     6                                  ;===============================================================================
     7                                  SECTION header vstart=0                     ;定义用户程序头部段 
     8 00000000 [00000000]                  program_length  dd program_end          ;程序总长度[0x00]
     9                                      
    10                                      ;用户程序入口点
    11 00000004 [A400]                      code_entry      dw start                ;偏移地址[0x04]
    12 00000006 [00000000]                                  dd section.code_1.start ;段地址[0x06] 
    13                                      
    14 0000000A 0500                        realloc_tbl_len dw (header_end-code_1_segment)/4
    15                                                                              ;段重定位表项个数[0x0a]
    16                                      
    17                                      ;段重定位表           
    18 0000000C [00000000]                  code_1_segment  dd section.code_1.start ;[0x0c]
    19 00000010 [00000000]                  code_2_segment  dd section.code_2.start ;[0x10]
    20 00000014 [00000000]                  data_1_segment  dd section.data_1.start ;[0x14]
    21 00000018 [00000000]                  data_2_segment  dd section.data_2.start ;[0x18]
    22 0000001C [00000000]                  stack_segment   dd section.stack.start  ;[0x1c]
    23                                      
    24                                      header_end:                
    25                                      
    26                                  ;===============================================================================
    27                                  SECTION code_1 align=16 vstart=0         ;定义代码段1（16字节对齐） 
    28                                  put_string:                              ;显示串(0结尾)。
    29                                                                           ;输入：DS:BX=串地址
    30                                                               
    31                                  
    32 00000000 8A0F                             mov cl,[bx]
    33 00000002 08C9                             or cl,cl                        ;cl=0 ?
    34 00000004 7407                             jz .exit                        ;是的，返回主程序 
    35 00000006 E80500                           call put_char
    36 00000009 43                               inc bx                          ;下一个字符 
    37 0000000A E9F3FF                           jmp put_string
    38                                  
    39                                     .exit:
    40 0000000D C3                               ret
    41                                  
    42                                  ;-------------------------------------------------------------------------------
    43                                  put_char:                                ;显示一个字符
    44                                                                           ;输入：cl=字符ascii
    45 0000000E 50                               push ax
    46 0000000F 53                               push bx
    47 00000010 51                               push cx
    48 00000011 52                               push dx
    49 00000012 1E                               push ds
    50 00000013 06                               push es
    51                                  
    52                                           ;以下取当前光标位置
    53 00000014 BAD403                           mov dx,0x3d4
    54 00000017 B00E                             mov al,0x0e
    55 00000019 EE                               out dx,al
    56 0000001A BAD503                           mov dx,0x3d5
    57 0000001D EC                               in al,dx                        ;高8位 
    58 0000001E 88C4                             mov ah,al
    59                                  
    60 00000020 BAD403                           mov dx,0x3d4
    61 00000023 B00F                             mov al,0x0f
    62 00000025 EE                               out dx,al
    63 00000026 BAD503                           mov dx,0x3d5
    64 00000029 EC                               in al,dx                        ;低8位 
    65 0000002A 89C3                             mov bx,ax                       ;BX=代表光标位置的16位数
    66                                  
    67 0000002C 80F90D                           cmp cl,0x0d                     ;回车符？
    68 0000002F 750B                             jnz .put_0a                     ;不是。看看是不是换行等字符 
    69                                           ;mov ax,bx                       此句略显多余，但去掉后还得改书，麻烦 
    70 00000031 B350                             mov bl,80                       
    71 00000033 F6F3                             div bl
    72 00000035 F6E3                             mul bl
    73 00000037 89C3                             mov bx,ax
    74 00000039 E94900                           jmp .set_cursor
    75                                  
    76                                   .put_0a:
    77 0000003C 80F90A                           cmp cl,0x0a                     ;换行符？
    78 0000003F 7507                             jnz .put_other                  ;不是，那就正常显示字符 
    79 00000041 81C35000                         add bx,80
    80 00000045 E91000                           jmp .roll_screen
    81                                  
    82                                   .put_other:                             ;正常显示字符
    83 00000048 B800B8                           mov ax,0xb800
    84 0000004B 8EC0                             mov es,ax
    85 0000004D D1E3                             shl bx,1
    86 0000004F 26880F                           mov [es:bx],cl
    87                                  
    88                                           ;以下将光标位置推进一个字符
    89 00000052 D1EB                             shr bx,1
    90 00000054 81C30100                         add bx,1
    91                                  
    92                                   .roll_screen:
    93 00000058 81FBD007                         cmp bx,2000                     ;光标超出屏幕？滚屏
    94 0000005C 7C27                             jl .set_cursor
    95                                  
    96 0000005E B800B8                           mov ax,0xb800
    97 00000061 8ED8                             mov ds,ax
    98 00000063 8EC0                             mov es,ax
    99 00000065 FC                               cld
   100 00000066 BEA000                           mov si,0xa0
   101 00000069 BF0000                           mov di,0x00
   102 0000006C B98007                           mov cx,1920
   103 0000006F F3A5                             rep movsw
   104 00000071 BB000F                           mov bx,3840                     ;清除屏幕最底一行
   105 00000074 B95000                           mov cx,80
   106                                   .cls:
   107 00000077 26C7072007                       mov word[es:bx],0x0720
   108 0000007C 81C30200                         add bx,2
   109 00000080 E2F5                             loop .cls
   110                                  
   111 00000082 BB8007                           mov bx,1920
   112                                  
   113                                   .set_cursor:
   114 00000085 BAD403                           mov dx,0x3d4
   115 00000088 B00E                             mov al,0x0e
   116 0000008A EE                               out dx,al
   117 0000008B BAD503                           mov dx,0x3d5
   118 0000008E 88F8                             mov al,bh
   119 00000090 EE                               out dx,al
   120 00000091 BAD403                           mov dx,0x3d4
   121 00000094 B00F                             mov al,0x0f
   122 00000096 EE                               out dx,al
   123 00000097 BAD503                           mov dx,0x3d5
   124 0000009A 88D8                             mov al,bl
   125 0000009C EE                               out dx,al
   126                                  
   127 0000009D 07                               pop es
   128 0000009E 1F                               pop ds
   129 0000009F 5A                               pop dx
   130 000000A0 59                               pop cx
   131 000000A1 5B                               pop bx
   132 000000A2 58                               pop ax
   133                                  
   134 000000A3 C3                               ret
   135                                  
   136                                  ;-------------------------------------------------------------------------------
   137                                    start:
   138                                           ;初始执行时，DS和ES指向用户程序头部段
   139 000000A4 A1[1C00]                         mov ax,[stack_segment]           ;设置到用户程序自己的堆栈 
   140 000000A7 8ED0                             mov ss,ax
   141 000000A9 BC[0001]                         mov sp,stack_end
   142                                           
   143 000000AC A1[1400]                         mov ax,[data_1_segment]          ;设置到用户程序自己的数据段
   144 000000AF 8ED8                             mov ds,ax
   145                                  
   146 000000B1 BB[0000]                         mov bx,msg0
   147 000000B4 E849FF                           call put_string                  ;显示第一段信息 
   148                                  
   149 000000B7 26FF36[1000]                     push word [es:code_2_segment]
   150 000000BC B8[0000]                         mov ax,begin
   151 000000BF 50                               push ax                          ;可以直接push begin,80386+
   152                                           
   153 000000C0 CB                               retf                             ;转移到代码段2执行 
   154                                           
   155                                    continue:
   156 000000C1 26A1[1800]                       mov ax,[es:data_2_segment]       ;段寄存器DS切换到数据段2 
   157 000000C5 8ED8                             mov ds,ax
   158                                           
   159 000000C7 3E8B1E[0000]                     mov bx,[ds:msg1]
   160                                           
   161 000000CC 53                               push bx
   162 000000CD BBE803                           mov bx,0x03e8
   163 000000D0 BAD403                           mov dx,0x3d4
   164 000000D3 B00E                             mov al,0x0e
   165 000000D5 EE                               out dx,al
   166 000000D6 BAD503                           mov dx,0x3d5
   167 000000D9 88F8                             mov al,bh
   168 000000DB EE                               out dx,al
   169 000000DC BAD403                           mov dx,0x3d4
   170 000000DF B00F                             mov al,0x0f
   171 000000E1 EE                               out dx,al
   172 000000E2 BAD503                           mov dx,0x3d5
   173 000000E5 88D8                             mov al,bl
   174 000000E7 EE                               out dx,al
   175 000000E8 5B                               pop bx
   176                                           
   177 000000E9 E814FF                           call put_string                  ;显示第二段信息 
   178                                  
   179 000000EC E9FDFF                           jmp $ 
   180                                  
   181                                  ;===============================================================================
   182                                  SECTION code_2 align=16 vstart=0          ;定义代码段2（16字节对齐）
   183                                  
   184                                    begin:
   185                                  	 ;以下计算累加和
   186 00000000 31D2                    	 xor dx,dx
   187 00000002 31C0                             xor ax,ax
   188 00000004 31C9                             xor cx,cx
   189                                    @@:
   190 00000006 41                               inc cx
   191 00000007 01C8                             add ax,cx
   192 00000009 81D20000                         adc dx,0
   193 0000000D 81F9E803                         cmp cx,1000
   194 00000011 7CF3                             jl @@
   195                                  
   196                                  
   197                                  	;以下计算累加和的每个数位，存到堆栈
   198 00000013 BB0A00                           mov bx,10
   199 00000016 31C9                             xor cx,cx
   200 00000018 41                               inc cx
   201 00000019 F7F3                             div bx
   202 0000001B 80CA30                           or dl,0x30
   203 0000001E 52                               push dx
   204                                            
   205                                  
   206                                       @d:
   207 0000001F 41                               inc cx
   208 00000020 31D2                             xor dx,dx
   209 00000022 F7F3                             div bx
   210 00000024 80CA30                           or dl,0x30
   211 00000027 52                               push dx
   212 00000028 3D0000                           cmp ax,0
   213 0000002B 75F2                             jne @d	 
   214                                  
   215                                  	 ;把堆栈中的数存到msg1
   216 0000002D 26A1[1800]              	 mov ax,[es:data_2_segment]
   217 00000031 8ED8                    	 mov ds,ax
   218 00000033 3E8B36[0000]            	 mov si,[ds:msg1]
   219                                       @b:
   220 00000038 5A                      	 pop dx
   221 00000039 3E8814                  	 mov [ds:si],dl
   222 0000003C 46                      	 inc si
   223 0000003D E2F9                    	 loop @b
   224                                  	 
   225                                  
   226                                  
   227 0000003F 26FF36[0C00]                     push word [es:code_1_segment]
   228 00000044 B8[C100]                         mov ax,continue
   229 00000047 50                               push ax                          ;可以直接push continue,80386+
   230                                           
   231 00000048 CB                               retf                             ;转移到代码段1接着执行 
   232                                           
   233                                  ;===============================================================================
   234                                  SECTION data_1 align=16 vstart=0
   235                                  
   236 00000000 312B322B2E2E2E2B31-         msg0 db '1+2+...+1000= '
   237 00000009 3030303D20         
   238 0000000E 00                               db 0
   239                                  
   240                                  ;===============================================================================
   241                                  SECTION data_2 align=16 vstart=0
   242                                  
   243 00000000 2020202020202020            msg1 db '        '
   244 00000008 00                               db 0
   245                                  
   246                                  ;===============================================================================
   247                                  SECTION stack align=16 vstart=0
   248                                             
   249 00000000 <res 00000100>                   resb 256
   250          ******************       warning: uninitialized space declared in stack section: zeroing
   251                                  
   252                                  stack_end:  
   253                                  
   254                                  ;===============================================================================
   255                                  SECTION trail align=16
   256                                  program_end:
