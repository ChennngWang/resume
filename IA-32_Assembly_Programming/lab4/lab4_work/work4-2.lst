     1                                           ;代码清单15-2
     2                                           ;文件名：c15.asm
     3                                           ;文件说明：用户程序 
     4                                           ;创建日期：2011-11-15 19:11   
     5                                  
     6                                  ;===============================================================================
     7                                  SECTION header vstart=0
     8                                  
     9 00000000 [00000000]                       program_length   dd program_end          ;程序总长度#0x00
    10                                           
    11 00000004 [28030000]                       head_len         dd header_end           ;程序头部的长度#0x04
    12                                  
    13 00000008 00000000                         stack_seg        dd 0                    ;用于接收堆栈段选择子#0x08
    14 0000000C 01000000                         stack_len        dd 1                    ;程序建议的堆栈大小#0x0c
    15                                                                                    ;以4KB为单位
    16                                                                                    
    17 00000010 [00000000]                       prgentry         dd start                ;程序入口#0x10 
    18 00000014 [00000000]                       code_seg         dd section.code.start   ;代码段位置#0x14
    19 00000018 [61000000]                       code_len         dd code_end             ;代码段长度#0x18
    20                                  
    21 0000001C [00000000]                       data_seg         dd section.data.start   ;数据段位置#0x1c
    22 00000020 [14000000]                       data_len         dd data_end             ;数据段长度#0x20
    23                                  ;-------------------------------------------------------------------------------
    24                                           ;符号地址检索表
    25 00000024 03000000                         salt_items       dd (header_end-salt)/256 ;#0x24
    26                                           
    27                                           salt:                                     ;#0x28
    28 00000028 405072696E74537472-              PrintString      db  '@PrintString'
    29 00000031 696E67             
    30 00000034 00<rept>                                     times 256-($-PrintString) db 0
    31                                                       
    32 00000128 405465726D696E6174-              TerminateProgram db  '@TerminateProgram'
    33 00000131 6550726F6772616D   
    34 00000139 00<rept>                                     times 256-($-TerminateProgram) db 0
    35                                                       
    36 00000228 40526561644469736B-              ReadDiskData     db  '@ReadDiskData'
    37 00000231 44617461           
    38 00000235 00<rept>                                     times 256-($-ReadDiskData) db 0
    39                                                   
    40                                  header_end:
    41                                    
    42                                  ;===============================================================================
    43                                  SECTION data vstart=0                
    44                                  
    45 00000000 0D0A                             message_1        db  0x0d,0x0a
    46 00000002 3130213D00                                        db  '10!=',0
    47                                                            
    48 00000007 202020202020202020-              message_2        db  '          ',0x0d,0x0a,0
    49 00000010 200D0A00           
    50                                  
    51                                  data_end:
    52                                  
    53                                  ;===============================================================================
    54                                        [bits 32]
    55                                  ;===============================================================================
    56                                  SECTION code vstart=0
    57                                  start:
    58                                           ;任务启动时，DS指向头部段，也不需要设置堆栈 
    59 00000000 8CD8                             mov eax,ds
    60 00000002 8EE0                             mov fs,eax
    61                                       
    62 00000004 A1[1C000000]                     mov eax,[data_seg]
    63 00000009 8ED8                             mov ds,eax
    64                                       
    65 0000000B BB[00000000]                     mov ebx,message_1
    66 00000010 64FF1D[28000000]                 call far [fs:PrintString]
    67                                  
    68                                  ;=======================================================
    69 00000017 31C0                             xor eax,eax
    70 00000019 31C9                             xor ecx,ecx
    71 0000001B B801000000              	 mov eax,1
    72                                    @@:
    73 00000020 41                               inc ecx
    74 00000021 F7E1                             mul ecx
    75 00000023 81F90A000000                     cmp ecx,10
    76 00000029 7CF5                             jl @@
    77                                  
    78                                  	;以下计算累加和的每个数位，存到堆栈
    79 0000002B BB0A000000                       mov ebx,10
    80 00000030 31C9                             xor ecx,ecx
    81                                       @d:
    82 00000032 41                               inc ecx
    83 00000033 31D2                             xor edx,edx
    84 00000035 F7F3                             div ebx
    85 00000037 80CA30                           or dl,0x30
    86 0000003A 52                               push edx    
    87 0000003B 3D00000000                       cmp eax,0
    88 00000040 75F0                             jne @d
    89                                  
    90                                  ;把堆栈中的数移动到message_2
    91 00000042 66BE[0700]              	 mov si,message_2
    92                                       @b:
    93 00000046 5A                      	 pop edx
    94 00000047 678814                  	 mov [si],dl
    95 0000004A 6646                    	 inc si
    96 0000004C E2F8                    	 loop @b
    97                                  ;==========================================================
    98 0000004E BB[07000000]                     mov ebx,message_2
    99 00000053 64FF1D[28000000]                 call far [fs:PrintString]
   100                                       
   101 0000005A 64FF1D[28010000]                 call far [fs:TerminateProgram]      ;退出，并将控制权返回到核心 
   102                                      
   103                                  code_end:
   104                                  
   105                                  ;-------------------------------------------------------------------------------
   106                                  SECTION trail
   107                                  ;-------------------------------------------------------------------------------
   108                                  program_end:
